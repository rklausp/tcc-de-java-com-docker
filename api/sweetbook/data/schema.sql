DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS permissao CASCADE;
DROP TABLE IF EXISTS postagem CASCADE;
DROP TABLE IF EXISTS curtida CASCADE;
DROP TABLE IF EXISTS comentario CASCADE;
DROP TABLE IF EXISTS amizade CASCADE;

CREATE TABLE usuario (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  nome_completo VARCHAR(255) NOT NULL,
  data_nascimento DATE NOT NULL,
  email VARCHAR(255) NOT NULL,
  apelido VARCHAR(50),
  senha VARCHAR(128) NOT NULL,
  imagem_perfil VARCHAR(512),
  ativo boolean NOT NULL
);

ALTER TABLE usuario ADD CONSTRAINT pk_usuario PRIMARY KEY (id);
ALTER TABLE usuario ADD CONSTRAINT uk_usuario_email UNIQUE (email);


CREATE TABLE permissao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	nome VARCHAR(100) NOT NULL,
	usuario_id BIGINT NOT NULL
);
ALTER TABLE permissao ADD CONSTRAINT pk_permissao PRIMARY KEY (id);
ALTER TABLE permissao ADD CONSTRAINT uk_permissao UNIQUE (nome, usuario_id);
ALTER TABLE permissao ADD CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;



CREATE TABLE postagem(
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_id BIGINT NOT NULL,
	tipo VARCHAR(25) NOT NULL,
	texto VARCHAR(1000) NOT NULL,
	imagem_url VARCHAR(512),
	hora_post TIMESTAMP NOT NULL
);

ALTER TABLE postagem ADD CONSTRAINT pk_postagem PRIMARY KEY (id);
ALTER TABLE postagem ADD CONSTRAINT fk_postagem_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;
ALTER TABLE postagem ADD CONSTRAINT ck_postagem_tipo CHECK (tipo IN ('PUBLICO', 'PRIVADO'));

CREATE TABLE curtida (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  postagem_id BIGINT NOT NULL,
  usuario_id BIGINT NOT NULL
);

ALTER TABLE curtida ADD CONSTRAINT pk_curtida PRIMARY KEY (id);
ALTER TABLE curtida ADD CONSTRAINT fk_curtida_postagem FOREIGN KEY (postagem_id) REFERENCES postagem;
ALTER TABLE curtida ADD CONSTRAINT fk_curtida_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;
ALTER TABLE curtida ADD CONSTRAINT uk_curtida_usuario UNIQUE (usuario_id, postagem_id);


CREATE TABLE comentario (
   id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
   postagem_id BIGINT NOT NULL,
   usuario_id BIGINT NOT NULL,
   texto VARCHAR(512) NOT NULL
);

ALTER TABLE comentario ADD CONSTRAINT pk_comentario PRIMARY KEY (id);
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_postagem FOREIGN KEY (postagem_id) REFERENCES postagem;
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;

CREATE TABLE amizade (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_um_id BIGINT NOT NULL,
	usuario_dois_id BIGINT NOT NULL,
	situacao VARCHAR(25) NOT NULL,
	disponivel_solicitar boolean NOT NULL
);

ALTER TABLE amizade ADD CONSTRAINT pk_amizade PRIMARY KEY (id);
ALTER TABLE amizade ADD CONSTRAINT fk_amizade_usuario_um FOREIGN KEY (usuario_um_id) REFERENCES usuario;
ALTER TABLE amizade ADD CONSTRAINT fk_amizade_usuario_dois FOREIGN KEY (usuario_dois_id) REFERENCES usuario;
ALTER TABLE amizade ADD CONSTRAINT uk_amizade UNIQUE (usuario_um_id, usuario_dois_id);
ALTER TABLE amizade ADD CONSTRAINT ck_amizade_situacao CHECK (situacao IN ('SOLICITADO', 'ACEITO', 'REMOVIDO'));


